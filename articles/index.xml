<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Articles on Developer Vlog</title><link>https://nullshots.com/articles/</link><description>Recent content in Articles on Developer Vlog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>❤️ Made with Love ❤️</copyright><lastBuildDate>Sat, 29 Oct 2022 11:07:10 +0600</lastBuildDate><atom:link href="https://nullshots.com/articles/index.xml" rel="self" type="application/rss+xml"/><item><title>Java Code Quality Series - 001</title><link>https://nullshots.com/articles/code-quality/java-code-quality-001/</link><pubDate>Sat, 29 Oct 2022 11:07:10 +0600</pubDate><guid>https://nullshots.com/articles/code-quality/java-code-quality-001/</guid><description>Overview Let&amp;rsquo;s begin the journey to better and bug free code. This series would focus on writing code optimization and quality in java.
Code Review and Code Quality Issue - 001 How we can simplify below code snippet /** * Here, Payment Indicator means if you are doing online shopping or with Point of Sale at Shop. * And, 1 corresponds to online shopping and 0 corresponds by Point of Sale.</description></item><item><title>Rotate Int Array in Java</title><link>https://nullshots.com/articles/int_array_rotation/</link><pubDate>Sat, 01 Oct 2022 11:07:10 +0600</pubDate><guid>https://nullshots.com/articles/int_array_rotation/</guid><description>Overview Given an array of integers arr[] of size N and an integer, the task is to rotate the array elements to the left by d positions.
Array Rotation One By One Solution Synopsis At each iteration, shift the elements by one position to the left circularly (i.e., first element becomes the last). Perform this operation d times to rotate the elements to the left by d position.</description></item><item><title>Validate String UUID in Java</title><link>https://nullshots.com/articles/validate_string_uuid_in_java/</link><pubDate>Thu, 29 Sep 2022 11:07:10 +0600</pubDate><guid>https://nullshots.com/articles/validate_string_uuid_in_java/</guid><description>Overview In this tutorial, we&amp;rsquo;re going to have a look at some ways of validating UUID (Universally Unique Identifier) strings in Java.
We&amp;rsquo;ll go through one of the UUID class methods, and then we&amp;rsquo;ll use regular expressions.
Using UUID.fromString() One of the quickest ways of checking if a String is a UUID is by trying to map it using the static method fromString belonging to the UUID class.</description></item><item><title>String Concatenation in Java</title><link>https://nullshots.com/articles/string-concatenation-in-java/</link><pubDate>Sat, 24 Sep 2022 11:07:10 +0600</pubDate><guid>https://nullshots.com/articles/string-concatenation-in-java/</guid><description>Overview String concatenation in Java is one of the most common operations. In this tutorial, we&amp;rsquo;ll walk through some approaches to string concatenation. But, we&amp;rsquo;ll focus on describing how to use concat() and the “+” operator approaches. Finally, we&amp;rsquo;ll discuss how to select the correct one depending on what we need to do.
Approaches to Concatenation In general, there are different approaches to concatenating two or more strings in Java.</description></item></channel></rss>