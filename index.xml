<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Developer Vlog</title><link>https://nullshots.com/</link><description>Recent content on Developer Vlog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>❤️ Made with Love ❤️</copyright><lastBuildDate>Sat, 29 Oct 2022 11:07:10 +0600</lastBuildDate><atom:link href="https://nullshots.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Java Code Quality Series - 001</title><link>https://nullshots.com/articles/code-quality/java-code-quality-001/</link><pubDate>Sat, 29 Oct 2022 11:07:10 +0600</pubDate><guid>https://nullshots.com/articles/code-quality/java-code-quality-001/</guid><description>Overview Let&amp;rsquo;s begin the journey to better and bug free code. This series would focus on writing code optimization and quality in java.
Code Review and Code Quality Issue - 001 How we can simplify below code snippet /** * Here, Payment Indicator means if you are doing online shopping or with Point of Sale at Shop. * And, 1 corresponds to online shopping and 0 corresponds by Point of Sale.</description></item><item><title>Rotate Int Array in Java</title><link>https://nullshots.com/articles/int_array_rotation/</link><pubDate>Sat, 01 Oct 2022 11:07:10 +0600</pubDate><guid>https://nullshots.com/articles/int_array_rotation/</guid><description>Overview Given an array of integers arr[] of size N and an integer, the task is to rotate the array elements to the left by d positions.
Array Rotation One By One Solution Synopsis At each iteration, shift the elements by one position to the left circularly (i.e., first element becomes the last). Perform this operation d times to rotate the elements to the left by d position.</description></item><item><title>Validate String UUID in Java</title><link>https://nullshots.com/articles/validate_string_uuid_in_java/</link><pubDate>Thu, 29 Sep 2022 11:07:10 +0600</pubDate><guid>https://nullshots.com/articles/validate_string_uuid_in_java/</guid><description>Overview In this tutorial, we&amp;rsquo;re going to have a look at some ways of validating UUID (Universally Unique Identifier) strings in Java.
We&amp;rsquo;ll go through one of the UUID class methods, and then we&amp;rsquo;ll use regular expressions.
Using UUID.fromString() One of the quickest ways of checking if a String is a UUID is by trying to map it using the static method fromString belonging to the UUID class.</description></item><item><title>String Concatenation in Java</title><link>https://nullshots.com/articles/string-concatenation-in-java/</link><pubDate>Sat, 24 Sep 2022 11:07:10 +0600</pubDate><guid>https://nullshots.com/articles/string-concatenation-in-java/</guid><description>Overview String concatenation in Java is one of the most common operations. In this tutorial, we&amp;rsquo;ll walk through some approaches to string concatenation. But, we&amp;rsquo;ll focus on describing how to use concat() and the “+” operator approaches. Finally, we&amp;rsquo;ll discuss how to select the correct one depending on what we need to do.
Approaches to Concatenation In general, there are different approaches to concatenating two or more strings in Java.</description></item><item><title>Search Result</title><link>https://nullshots.com/search/</link><pubDate>Mon, 24 Sep 2018 11:07:10 +0600</pubDate><guid>https://nullshots.com/search/</guid><description/></item><item><title>Contact</title><link>https://nullshots.com/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nullshots.com/contact/</guid><description>Feel free to drop me a message or if you are at Frankfurt we could grab a coffee.</description></item><item><title>Elements</title><link>https://nullshots.com/elements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nullshots.com/elements/</guid><description>Heading example Here is example of hedings. You can use this heading by following markdownify rules. For example: use # for heading 1 and use ###### for heading 6.
Heading 1 Heading 2 Heading 3 Heading 4 Heading 5 Heading 6 Emphasis Emphasis, aka italics, with asterisks or underscores.
Strong emphasis, aka bold, with asterisks or underscores.
Combined emphasis with asterisks and underscores.</description></item><item><title>Our Privacy Policy</title><link>https://nullshots.com/privacy-policy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nullshots.com/privacy-policy/</guid><description>Responsibility of Contributors Lorem ipsum dolor sit amet, consectetur adipiscing elit. Purus, donec nunc eros, ullamcorper id feugiat quisque aliquam sagittis. Sem turpis sed viverra massa gravida pharetra. Non dui dolor potenti eu dignissim fusce. Ultrices amet, in curabitur a arcu a lectus morbi id. Iaculis erat sagittis in tortor cursus. Molestie urna eu tortor, erat scelerisque eget. Nunc hendrerit sed interdum lacus.</description></item><item><title>Our Terms And Conditions</title><link>https://nullshots.com/terms-conditions-copy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nullshots.com/terms-conditions-copy/</guid><description>Responsibility of Contributors Lorem ipsum dolor sit amet, consectetur adipiscing elit. Purus, donec nunc eros, ullamcorper id feugiat quisque aliquam sagittis. Sem turpis sed viverra massa gravida pharetra. Non dui dolor potenti eu dignissim fusce. Ultrices amet, in curabitur a arcu a lectus morbi id. Iaculis erat sagittis in tortor cursus. Molestie urna eu tortor, erat scelerisque eget. Nunc hendrerit sed interdum lacus.</description></item><item><title>Pratiyush Kumar Singh</title><link>https://nullshots.com/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nullshots.com/about/</guid><description>Hello, I&amp;rsquo;m Pratiyush. A Content writter, Developer. Quam nihil enim maxime corporis cumque totam aliquid nam sint inventore optio modi neque laborum officiis necessitatibus, facilis placeat pariatur! Voluptatem, sed harum pariatur adipisci voluptates voluptatum cumque, porro sint minima similique magni perferendis fuga! Optio vel ipsum excepturi tempore reiciendis id quidem? Vel in, doloribus debitis nesciunt fugit sequi magnam accusantium modi neque quis, vitae velit, pariatur harum autem a!</description></item><item><title>Terms And Conditions</title><link>https://nullshots.com/terms-conditions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://nullshots.com/terms-conditions/</guid><description>Responsibility of Contributors Lorem ipsum dolor sit amet, consectetur adipiscing elit. Purus, donec nunc eros, ullamcorper id feugiat quisque aliquam sagittis. Sem turpis sed viverra massa gravida pharetra. Non dui dolor potenti eu dignissim fusce. Ultrices amet, in curabitur a arcu a lectus morbi id. Iaculis erat sagittis in tortor cursus. Molestie urna eu tortor, erat scelerisque eget. Nunc hendrerit sed interdum lacus.</description></item></channel></rss>